
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/plot_from_serial_to_parallel_hyperparameter_search.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_plot_from_serial_to_parallel_hyperparameter_search.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plot_from_serial_to_parallel_hyperparameter_search.py:


From Serial to Parallel Evaluations
===================================

**Author(s)**: Romain Egele.

This example demonstrates the advantages of parallel evaluations over serial evaluations. We start by defining an artificial black-box ``run``-function by using the Ackley function:

.. image:: https://www.sfu.ca/~ssurjano/ackley.png
  :width: 400
  :alt: Ackley Function in 2D

We will use the ``time.sleep`` function to simulate a budget of 2 secondes of execution in average which helps illustrate the advantage of parallel evaluations. The ``@profile`` decorator is useful to collect starting/ending time of the ``run``-function execution which help us know exactly when we are inside the black-box. When using this decorator, the ``run``-function will return a dictionnary with 2 new keys ``"timestamp_start"`` and ``"timestamp_end"``. The ``run``-function is defined in a separate module because of the "multiprocessing" backend that we are using in this example.

.. literalinclude:: ../../examples/black_box_util.py
   :language: python
   :emphasize-lines: 19-28 
   :linenos:

After defining the black-box we can continue with the definition of our main script:

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: default

    import black_box_util as black_box









.. GENERATED FROM PYTHON SOURCE LINES 27-28

Then we define the variable(s) we want to optimize. For this problem we optimize Ackley in a 2-dimensional search space, the true minimul is located at ``(0, 0)``.

.. GENERATED FROM PYTHON SOURCE LINES 28-37

.. code-block:: default

    from deephyper.problem import HpProblem


    nb_dim = 2
    problem = HpProblem()
    for i in range(nb_dim):
        problem.add_hyperparameter((-32.768, 32.768), f"x{i}")
    problem





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Configuration space object:
      Hyperparameters:
        x0, Type: UniformFloat, Range: [-32.768, 32.768], Default: 0.0
        x1, Type: UniformFloat, Range: [-32.768, 32.768], Default: 0.0




.. GENERATED FROM PYTHON SOURCE LINES 38-39

Then we define serial search by creation a ``"serial"``-evaluator and we execute the search with a fixed time-budget of 2 minutes (i.e., 120 secondes).

.. GENERATED FROM PYTHON SOURCE LINES 39-54

.. code-block:: default


    from deephyper.evaluator import Evaluator
    from deephyper.evaluator.callback import TqdmCallback
    from deephyper.search.hps import CBO

    # we give a budget of 2 minutes for each search
    timeout = 120
    serial_evaluator = Evaluator.create(
        black_box.run_ackley, method="serial", method_kwargs={"callbacks": [TqdmCallback()]}
    )

    results = {}
    serial_search = CBO(problem, serial_evaluator, random_state=42)
    results["serial"] = serial_search.search(timeout=timeout)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    0it [00:00, ?it/s]    1it [00:01,  1.49s/it]    1it [00:01,  1.49s/it, objective=-21.2]    2it [00:02,  1.42s/it, objective=-21.2]    2it [00:02,  1.42s/it, objective=-19.9]    3it [00:05,  2.20s/it, objective=-19.9]    3it [00:05,  2.20s/it, objective=-19.9]    4it [00:08,  2.21s/it, objective=-19.9]    4it [00:08,  2.21s/it, objective=-19.9]    5it [00:10,  2.22s/it, objective=-19.9]    5it [00:10,  2.22s/it, objective=-19.9]    6it [00:13,  2.39s/it, objective=-19.9]    6it [00:13,  2.39s/it, objective=-19.9]    7it [00:15,  2.45s/it, objective=-19.9]    7it [00:15,  2.45s/it, objective=-19.9]    8it [00:18,  2.60s/it, objective=-19.9]    8it [00:18,  2.60s/it, objective=-19.9]    9it [00:20,  2.41s/it, objective=-19.9]    9it [00:20,  2.41s/it, objective=-19.9]    10it [00:23,  2.46s/it, objective=-19.9]    10it [00:23,  2.46s/it, objective=-11.3]    11it [00:26,  2.63s/it, objective=-11.3]    11it [00:26,  2.63s/it, objective=-9.86]    12it [00:28,  2.44s/it, objective=-9.86]    12it [00:28,  2.44s/it, objective=-9.86]    13it [00:31,  2.64s/it, objective=-9.86]    13it [00:31,  2.64s/it, objective=-9.86]    14it [00:33,  2.42s/it, objective=-9.86]    14it [00:33,  2.42s/it, objective=-9.86]    15it [00:35,  2.36s/it, objective=-9.86]    15it [00:35,  2.36s/it, objective=-9.86]    16it [00:38,  2.56s/it, objective=-9.86]    16it [00:38,  2.56s/it, objective=-3.64]    17it [00:40,  2.29s/it, objective=-3.64]    17it [00:40,  2.29s/it, objective=-2.66]    18it [00:42,  2.43s/it, objective=-2.66]    18it [00:42,  2.43s/it, objective=-2.66]    19it [00:45,  2.45s/it, objective=-2.66]    19it [00:45,  2.45s/it, objective=-2.66]    20it [00:48,  2.53s/it, objective=-2.66]    20it [00:48,  2.53s/it, objective=-2.66]    21it [00:49,  2.32s/it, objective=-2.66]    21it [00:49,  2.32s/it, objective=-2.66]    22it [00:52,  2.26s/it, objective=-2.66]    22it [00:52,  2.26s/it, objective=-2.66]    23it [00:53,  1.90s/it, objective=-2.66]    23it [00:53,  1.90s/it, objective=-2.66]    24it [00:55,  2.02s/it, objective=-2.66]    24it [00:55,  2.02s/it, objective=-2.66]    25it [00:57,  2.15s/it, objective=-2.66]    25it [00:57,  2.15s/it, objective=-2.66]    26it [00:59,  2.09s/it, objective=-2.66]    26it [00:59,  2.09s/it, objective=-2.66]    27it [01:02,  2.25s/it, objective=-2.66]    27it [01:02,  2.25s/it, objective=-2.66]    28it [01:03,  1.97s/it, objective=-2.66]    28it [01:03,  1.97s/it, objective=-2.66]    29it [01:06,  2.25s/it, objective=-2.66]    29it [01:06,  2.25s/it, objective=-2.66]    30it [01:09,  2.29s/it, objective=-2.66]    30it [01:09,  2.29s/it, objective=-2.66]    31it [01:11,  2.27s/it, objective=-2.66]    31it [01:11,  2.27s/it, objective=-2.66]    32it [01:13,  2.25s/it, objective=-2.66]    32it [01:13,  2.25s/it, objective=-2.66]    33it [01:15,  2.30s/it, objective=-2.66]    33it [01:15,  2.30s/it, objective=-2.66]    34it [01:17,  2.19s/it, objective=-2.66]    34it [01:17,  2.19s/it, objective=-2.66]    35it [01:20,  2.33s/it, objective=-2.66]    35it [01:20,  2.33s/it, objective=-2.66]    36it [01:22,  2.23s/it, objective=-2.66]    36it [01:22,  2.23s/it, objective=-2.66]    37it [01:24,  2.13s/it, objective=-2.66]    37it [01:24,  2.13s/it, objective=-2.66]    38it [01:27,  2.39s/it, objective=-2.66]    38it [01:27,  2.39s/it, objective=-2.66]    39it [01:30,  2.48s/it, objective=-2.66]    39it [01:30,  2.48s/it, objective=-2.66]    40it [01:32,  2.45s/it, objective=-2.66]    40it [01:32,  2.45s/it, objective=-2.66]    41it [01:34,  2.42s/it, objective=-2.66]    41it [01:34,  2.42s/it, objective=-2.66]    42it [01:37,  2.49s/it, objective=-2.66]    42it [01:37,  2.49s/it, objective=-2.66]    43it [01:39,  2.21s/it, objective=-2.66]    43it [01:39,  2.21s/it, objective=-2.66]    44it [01:41,  2.27s/it, objective=-2.66]    44it [01:41,  2.27s/it, objective=-2.66]    45it [01:43,  2.27s/it, objective=-2.66]    45it [01:43,  2.27s/it, objective=-2.66]    46it [01:45,  2.27s/it, objective=-2.66]    46it [01:45,  2.27s/it, objective=-2.66]    47it [01:47,  2.11s/it, objective=-2.66]    47it [01:47,  2.11s/it, objective=-2.66]    48it [01:49,  2.07s/it, objective=-2.66]    48it [01:49,  2.07s/it, objective=-2.66]    49it [01:51,  2.10s/it, objective=-2.66]    49it [01:51,  2.10s/it, objective=-2.66]    50it [01:54,  2.21s/it, objective=-2.66]    50it [01:54,  2.21s/it, objective=-2.66]    51it [01:56,  2.21s/it, objective=-2.66]    51it [01:56,  2.21s/it, objective=-2.66]    52it [01:57,  1.92s/it, objective=-2.66]    52it [01:57,  1.92s/it, objective=-2.66]



.. GENERATED FROM PYTHON SOURCE LINES 55-56

After, executing the serial-search for 2 minutes we can create a parallel search which uses the ``"process"``-evaluator and defines 5 parallel workers. The search is also executed for 2 minutes.

.. GENERATED FROM PYTHON SOURCE LINES 56-66

.. code-block:: default


    parallel_evaluator = Evaluator.create(
        black_box.run_ackley,
        method="process",
        method_kwargs={"num_workers": 5, "callbacks": [TqdmCallback()]},
    )

    parallel_search = CBO(problem, parallel_evaluator, random_state=42)
    results["parallel"] = parallel_search.search(timeout=timeout)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0it [00:00, ?it/s]
    1it [00:02,  2.18s/it]
    1it [00:02,  2.18s/it, objective=-22]
    2it [00:02,  1.02it/s, objective=-22]
    2it [00:02,  1.02it/s, objective=-21.5]
    3it [00:02,  1.37it/s, objective=-21.5]
    3it [00:02,  1.37it/s, objective=-20.6]
    4it [00:03,  1.77it/s, objective=-20.6]
    4it [00:03,  1.77it/s, objective=-20.6]
    5it [00:03,  1.52it/s, objective=-20.6]
    5it [00:03,  1.52it/s, objective=-20.6]
    6it [00:04,  1.96it/s, objective=-20.6]
    6it [00:04,  1.96it/s, objective=-20.6]
    7it [00:05,  1.49it/s, objective=-20.6]
    7it [00:05,  1.49it/s, objective=-19.9]
    8it [00:05,  1.47it/s, objective=-19.9]
    8it [00:05,  1.47it/s, objective=-19.9]
    9it [00:05,  1.47it/s, objective=-19.9]
    10it [00:06,  2.00it/s, objective=-19.9]
    10it [00:06,  2.00it/s, objective=-19.9]
    11it [00:07,  1.81it/s, objective=-19.9]
    11it [00:07,  1.81it/s, objective=-19.9]
    12it [00:07,  1.65it/s, objective=-19.9]
    12it [00:07,  1.65it/s, objective=-19.9]
    13it [00:08,  1.66it/s, objective=-19.9]
    13it [00:08,  1.66it/s, objective=-19.9]
    14it [00:08,  1.89it/s, objective=-19.9]
    14it [00:08,  1.89it/s, objective=-11.3]
    15it [00:08,  1.89it/s, objective=-11.3]
    16it [00:09,  1.82it/s, objective=-11.3]
    16it [00:09,  1.82it/s, objective=-11.3]
    17it [00:10,  1.62it/s, objective=-11.3]
    17it [00:10,  1.62it/s, objective=-11.3]
    18it [00:11,  1.68it/s, objective=-11.3]
    18it [00:11,  1.68it/s, objective=-11.3]
    19it [00:11,  1.77it/s, objective=-11.3]
    19it [00:11,  1.77it/s, objective=-11.3]
    20it [00:12,  2.06it/s, objective=-11.3]
    20it [00:12,  2.06it/s, objective=-11.3]
    21it [00:12,  2.22it/s, objective=-11.3]
    21it [00:12,  2.22it/s, objective=-10.7]
    22it [00:13,  1.62it/s, objective=-10.7]
    22it [00:13,  1.62it/s, objective=-6.17]
    23it [00:13,  1.80it/s, objective=-6.17]
    23it [00:13,  1.80it/s, objective=-6.17]
    24it [00:14,  2.01it/s, objective=-6.17]
    24it [00:14,  2.01it/s, objective=-6.17]
    25it [00:14,  2.09it/s, objective=-6.17]
    25it [00:14,  2.09it/s, objective=-6.17]
    26it [00:15,  1.78it/s, objective=-6.17]
    26it [00:15,  1.78it/s, objective=-5.9] 
    27it [00:16,  1.61it/s, objective=-5.9]
    27it [00:16,  1.61it/s, objective=-5.9]
    28it [00:16,  1.92it/s, objective=-5.9]
    28it [00:16,  1.92it/s, objective=-5.9]
    29it [00:17,  1.44it/s, objective=-5.9]
    29it [00:17,  1.44it/s, objective=-5.9]
    30it [00:17,  1.67it/s, objective=-5.9]
    30it [00:17,  1.67it/s, objective=-5.9]
    31it [00:18,  1.53it/s, objective=-5.9]
    31it [00:18,  1.53it/s, objective=-5.9]
    32it [00:19,  1.45it/s, objective=-5.9]
    32it [00:19,  1.45it/s, objective=-5.9]
    33it [00:19,  1.76it/s, objective=-5.9]
    33it [00:19,  1.76it/s, objective=-5.9]
    34it [00:20,  1.56it/s, objective=-5.9]
    34it [00:20,  1.56it/s, objective=-5.9]
    35it [00:20,  1.87it/s, objective=-5.9]
    35it [00:20,  1.87it/s, objective=-5.9]
    36it [00:22,  1.11it/s, objective=-5.9]
    36it [00:22,  1.11it/s, objective=-5.9]
    37it [00:23,  1.34it/s, objective=-5.9]
    37it [00:23,  1.34it/s, objective=-5.9]
    38it [00:23,  1.64it/s, objective=-5.9]
    38it [00:23,  1.64it/s, objective=-5.9]
    39it [00:23,  1.64it/s, objective=-5.9]
    40it [00:23,  2.31it/s, objective=-5.9]
    40it [00:23,  2.31it/s, objective=-5.9]
    41it [00:26,  1.06it/s, objective=-5.9]
    41it [00:26,  1.06it/s, objective=-5.9]
    42it [00:26,  1.27it/s, objective=-5.9]
    42it [00:26,  1.27it/s, objective=-5.9]
    43it [00:26,  1.53it/s, objective=-5.9]
    43it [00:26,  1.53it/s, objective=-5.9]
    44it [00:27,  1.73it/s, objective=-5.9]
    44it [00:27,  1.73it/s, objective=-5.9]
    45it [00:27,  1.73it/s, objective=-5.9]
    46it [00:28,  1.56it/s, objective=-5.9]
    46it [00:28,  1.56it/s, objective=-5.9]
    47it [00:29,  1.76it/s, objective=-5.9]
    47it [00:29,  1.76it/s, objective=-5.9]
    48it [00:29,  1.73it/s, objective=-5.9]
    48it [00:29,  1.73it/s, objective=-5.9]
    49it [00:30,  1.52it/s, objective=-5.9]
    49it [00:30,  1.52it/s, objective=-5.9]
    50it [00:30,  1.79it/s, objective=-5.9]
    50it [00:30,  1.79it/s, objective=-5.9]
    51it [00:31,  1.51it/s, objective=-5.9]
    51it [00:31,  1.51it/s, objective=-5.9]
    52it [00:32,  1.34it/s, objective=-5.9]
    52it [00:32,  1.34it/s, objective=-5.9]
    53it [00:33,  1.63it/s, objective=-5.9]
    53it [00:33,  1.63it/s, objective=-5.9]
    54it [00:33,  1.42it/s, objective=-5.9]
    54it [00:33,  1.42it/s, objective=-5.81]
    55it [00:34,  1.64it/s, objective=-5.81]
    55it [00:34,  1.64it/s, objective=-5.81]
    56it [00:34,  1.64it/s, objective=-5.14]
    57it [00:36,  1.30it/s, objective=-5.14]
    57it [00:36,  1.30it/s, objective=-5.14]
    58it [00:37,  1.25it/s, objective=-5.14]
    58it [00:37,  1.25it/s, objective=-5.14]
    59it [00:37,  1.45it/s, objective=-5.14]
    59it [00:37,  1.45it/s, objective=-3.19]
    60it [00:37,  1.45it/s, objective=-3.19]
    61it [00:38,  1.69it/s, objective=-3.19]
    61it [00:38,  1.69it/s, objective=-3.04]
    62it [00:39,  1.25it/s, objective=-3.04]
    62it [00:39,  1.25it/s, objective=-2.45]
    63it [00:40,  1.42it/s, objective=-2.45]
    63it [00:40,  1.42it/s, objective=-2.45]
    64it [00:40,  1.58it/s, objective=-2.45]
    64it [00:40,  1.58it/s, objective=-2.45]
    65it [00:41,  1.68it/s, objective=-2.45]
    65it [00:41,  1.68it/s, objective=-1.78]
    66it [00:41,  1.85it/s, objective=-1.78]
    66it [00:41,  1.85it/s, objective=-1.78]
    67it [00:43,  1.16it/s, objective=-1.78]
    67it [00:43,  1.16it/s, objective=-1.78]
    68it [00:43,  1.41it/s, objective=-1.78]
    68it [00:43,  1.41it/s, objective=-1.78]
    69it [00:44,  1.28it/s, objective=-1.78]
    69it [00:44,  1.28it/s, objective=-1.78]
    70it [00:44,  1.56it/s, objective=-1.78]
    70it [00:44,  1.56it/s, objective=-1.78]
    71it [00:45,  1.50it/s, objective=-1.78]
    71it [00:45,  1.50it/s, objective=-1.78]
    72it [00:46,  1.63it/s, objective=-1.78]
    72it [00:46,  1.63it/s, objective=-1.78]
    73it [00:46,  1.58it/s, objective=-1.78]
    73it [00:46,  1.58it/s, objective=-1.78]
    74it [00:47,  1.52it/s, objective=-1.78]
    74it [00:47,  1.52it/s, objective=-1.78]
    75it [00:48,  1.57it/s, objective=-1.78]
    75it [00:48,  1.57it/s, objective=-1.78]
    76it [00:48,  1.67it/s, objective=-1.78]
    76it [00:48,  1.67it/s, objective=-1.78]
    77it [00:49,  1.67it/s, objective=-1.78]
    77it [00:49,  1.67it/s, objective=-1.78]
    78it [00:49,  1.97it/s, objective=-1.78]
    78it [00:49,  1.97it/s, objective=-1.78]
    79it [00:50,  1.46it/s, objective=-1.78]
    79it [00:50,  1.46it/s, objective=-1.78]
    80it [00:51,  1.31it/s, objective=-1.78]
    80it [00:51,  1.31it/s, objective=-1.78]
    81it [00:51,  1.60it/s, objective=-1.78]
    81it [00:51,  1.60it/s, objective=-1.78]
    82it [00:51,  1.60it/s, objective=-1.78]
    83it [00:52,  1.69it/s, objective=-1.78]
    83it [00:52,  1.69it/s, objective=-1.78]
    84it [00:54,  1.32it/s, objective=-1.78]
    84it [00:54,  1.32it/s, objective=-1.78]
    85it [00:54,  1.55it/s, objective=-1.78]
    85it [00:54,  1.55it/s, objective=-1.78]
    86it [00:55,  1.67it/s, objective=-1.78]
    86it [00:55,  1.67it/s, objective=-1.78]
    87it [00:55,  1.80it/s, objective=-1.78]
    87it [00:55,  1.80it/s, objective=-1.78]
    88it [00:55,  1.93it/s, objective=-1.78]
    88it [00:55,  1.93it/s, objective=-1.78]
    89it [00:56,  1.88it/s, objective=-1.78]
    89it [00:56,  1.88it/s, objective=-1.78]
    90it [00:58,  1.07it/s, objective=-1.78]
    90it [00:58,  1.07it/s, objective=-1.78]
    91it [00:58,  1.32it/s, objective=-1.78]
    91it [00:58,  1.32it/s, objective=-1.78]
    92it [00:58,  1.32it/s, objective=-1.78]
    93it [00:58,  1.32it/s, objective=-1.78]
    94it [00:59,  2.16it/s, objective=-1.78]
    94it [00:59,  2.16it/s, objective=-.634]
    95it [01:01,  1.20it/s, objective=-.634]
    95it [01:01,  1.20it/s, objective=-.634]
    96it [01:01,  1.39it/s, objective=-.634]
    96it [01:01,  1.39it/s, objective=-.634]
    97it [01:02,  1.62it/s, objective=-.634]
    97it [01:02,  1.62it/s, objective=-.634]
    98it [01:02,  1.79it/s, objective=-.634]
    98it [01:02,  1.79it/s, objective=-.634]
    99it [01:02,  2.03it/s, objective=-.634]
    99it [01:03,  2.03it/s, objective=-.634]
    100it [01:05,  1.08it/s, objective=-.634]
    100it [01:05,  1.08it/s, objective=-.634]
    101it [01:05,  1.28it/s, objective=-.634]
    101it [01:05,  1.28it/s, objective=-.634]
    102it [01:05,  1.56it/s, objective=-.634]
    102it [01:05,  1.56it/s, objective=-.634]
    103it [01:06,  1.71it/s, objective=-.634]
    103it [01:06,  1.71it/s, objective=-.634]
    104it [01:06,  1.89it/s, objective=-.634]
    104it [01:06,  1.89it/s, objective=-.634]
    105it [01:07,  1.41it/s, objective=-.634]
    105it [01:07,  1.41it/s, objective=-.634]
    106it [01:08,  1.40it/s, objective=-.634]
    106it [01:08,  1.40it/s, objective=-.634]
    107it [01:08,  1.59it/s, objective=-.634]
    107it [01:08,  1.59it/s, objective=-.634]
    108it [01:09,  1.58it/s, objective=-.634]
    108it [01:09,  1.58it/s, objective=-.634]
    109it [01:10,  1.45it/s, objective=-.634]
    109it [01:10,  1.45it/s, objective=-.634]
    110it [01:10,  1.60it/s, objective=-.634]
    110it [01:10,  1.60it/s, objective=-.634]
    111it [01:11,  1.29it/s, objective=-.634]
    111it [01:11,  1.29it/s, objective=-.378]
    112it [01:12,  1.34it/s, objective=-.378]
    112it [01:12,  1.34it/s, objective=-.378]
    113it [01:12,  1.62it/s, objective=-.378]
    113it [01:12,  1.62it/s, objective=-.378]
    114it [01:13,  1.91it/s, objective=-.378]
    114it [01:13,  1.91it/s, objective=-.378]
    115it [01:14,  1.46it/s, objective=-.378]
    115it [01:14,  1.46it/s, objective=-.378]
    116it [01:15,  1.12it/s, objective=-.378]
    116it [01:15,  1.12it/s, objective=-.378]
    117it [01:16,  1.38it/s, objective=-.378]
    117it [01:16,  1.38it/s, objective=-.378]
    118it [01:16,  1.34it/s, objective=-.378]
    118it [01:16,  1.34it/s, objective=-.378]
    119it [01:17,  1.42it/s, objective=-.378]
    119it [01:17,  1.42it/s, objective=-.378]
    120it [01:17,  1.71it/s, objective=-.378]
    120it [01:17,  1.71it/s, objective=-.378]
    121it [01:18,  1.71it/s, objective=-.378]
    121it [01:18,  1.71it/s, objective=-.378]
    122it [01:18,  1.67it/s, objective=-.378]
    122it [01:18,  1.67it/s, objective=-.378]
    123it [01:19,  1.56it/s, objective=-.378]
    123it [01:19,  1.56it/s, objective=-.378]
    124it [01:20,  1.74it/s, objective=-.378]
    124it [01:20,  1.74it/s, objective=-.378]
    125it [01:21,  1.43it/s, objective=-.378]
    125it [01:21,  1.43it/s, objective=-.378]
    126it [01:21,  1.70it/s, objective=-.378]
    126it [01:21,  1.70it/s, objective=-.378]
    127it [01:21,  1.98it/s, objective=-.378]
    127it [01:21,  1.98it/s, objective=-.378]
    128it [01:22,  1.44it/s, objective=-.378]
    128it [01:22,  1.44it/s, objective=-.378]
    129it [01:23,  1.58it/s, objective=-.378]
    129it [01:23,  1.58it/s, objective=-.378]
    130it [01:23,  1.87it/s, objective=-.378]
    130it [01:23,  1.87it/s, objective=-.378]
    131it [01:24,  1.72it/s, objective=-.378]
    131it [01:24,  1.72it/s, objective=-.378]
    132it [01:24,  2.00it/s, objective=-.378]
    132it [01:24,  2.00it/s, objective=-.378]
    133it [01:26,  1.14it/s, objective=-.378]
    133it [01:26,  1.14it/s, objective=-.378]
    134it [01:26,  1.35it/s, objective=-.378]
    134it [01:26,  1.35it/s, objective=-.301]
    135it [01:27,  1.64it/s, objective=-.301]
    135it [01:27,  1.64it/s, objective=-.301]
    136it [01:27,  1.89it/s, objective=-.301]
    136it [01:27,  1.89it/s, objective=-.301]
    137it [01:27,  2.04it/s, objective=-.301]
    137it [01:27,  2.04it/s, objective=-.301]
    138it [01:29,  1.08it/s, objective=-.301]
    138it [01:29,  1.08it/s, objective=-.301]
    139it [01:30,  1.34it/s, objective=-.301]
    139it [01:30,  1.34it/s, objective=-.301]
    140it [01:30,  1.62it/s, objective=-.301]
    140it [01:30,  1.62it/s, objective=-.268]
    141it [01:30,  1.81it/s, objective=-.268]
    141it [01:30,  1.81it/s, objective=-.268]
    142it [01:30,  1.81it/s, objective=-.268]
    143it [01:33,  1.17it/s, objective=-.268]
    143it [01:33,  1.17it/s, objective=-.214]
    144it [01:33,  1.34it/s, objective=-.214]
    144it [01:33,  1.34it/s, objective=-.214]
    145it [01:34,  1.58it/s, objective=-.214]
    145it [01:34,  1.58it/s, objective=-.214]
    146it [01:34,  1.82it/s, objective=-.214]
    146it [01:34,  1.82it/s, objective=-.214]
    147it [01:34,  2.07it/s, objective=-.214]
    147it [01:34,  2.07it/s, objective=-.214]
    148it [01:36,  1.14it/s, objective=-.214]
    148it [01:36,  1.14it/s, objective=-.214]
    149it [01:37,  1.19it/s, objective=-.214]
    149it [01:37,  1.19it/s, objective=-.214]
    150it [01:37,  1.46it/s, objective=-.214]
    150it [01:37,  1.46it/s, objective=-.214]
    151it [01:37,  1.67it/s, objective=-.214]
    151it [01:37,  1.67it/s, objective=-.214]
    152it [01:38,  1.67it/s, objective=-.214]
    152it [01:38,  1.67it/s, objective=-.214]
    153it [01:40,  1.07it/s, objective=-.214]
    153it [01:40,  1.07it/s, objective=-.214]
    154it [01:40,  1.28it/s, objective=-.214]
    154it [01:40,  1.28it/s, objective=-.214]
    155it [01:41,  1.56it/s, objective=-.214]
    155it [01:41,  1.56it/s, objective=-.214]
    156it [01:41,  1.83it/s, objective=-.214]
    156it [01:41,  1.83it/s, objective=-.214]
    157it [01:41,  1.80it/s, objective=-.214]
    157it [01:41,  1.80it/s, objective=-.214]
    158it [01:43,  1.11it/s, objective=-.214]
    158it [01:43,  1.11it/s, objective=-.214]
    159it [01:43,  1.37it/s, objective=-.214]
    159it [01:43,  1.37it/s, objective=-.214]
    160it [01:44,  1.29it/s, objective=-.214]
    160it [01:44,  1.29it/s, objective=-.214]
    161it [01:45,  1.52it/s, objective=-.214]
    161it [01:45,  1.52it/s, objective=-.214]
    162it [01:45,  1.52it/s, objective=-.214]
    163it [01:46,  1.73it/s, objective=-.214]
    163it [01:46,  1.73it/s, objective=-.214]
    164it [01:47,  1.30it/s, objective=-.214]
    164it [01:47,  1.30it/s, objective=-.214]
    165it [01:48,  1.36it/s, objective=-.214]
    165it [01:48,  1.36it/s, objective=-.214]
    166it [01:48,  1.58it/s, objective=-.214]
    166it [01:48,  1.58it/s, objective=-.214]
    167it [01:48,  1.84it/s, objective=-.214]
    167it [01:48,  1.84it/s, objective=-.214]
    168it [01:49,  1.99it/s, objective=-.214]
    168it [01:49,  1.99it/s, objective=-.214]
    169it [01:50,  1.73it/s, objective=-.214]
    169it [01:50,  1.73it/s, objective=-.214]
    170it [01:51,  1.12it/s, objective=-.214]
    170it [01:51,  1.12it/s, objective=-.214]
    171it [01:52,  1.33it/s, objective=-.214]
    171it [01:52,  1.33it/s, objective=-.214]
    172it [01:52,  1.33it/s, objective=-.214]
    173it [01:52,  1.92it/s, objective=-.214]
    173it [01:52,  1.92it/s, objective=-.214]
    174it [01:52,  1.92it/s, objective=-.214]
    175it [01:54,  1.30it/s, objective=-.214]
    175it [01:54,  1.30it/s, objective=-.214]
    176it [01:55,  1.44it/s, objective=-.214]
    176it [01:55,  1.44it/s, objective=-.214]
    177it [01:55,  1.63it/s, objective=-.214]
    177it [01:55,  1.63it/s, objective=-.214]
    178it [01:56,  1.85it/s, objective=-.214]
    178it [01:56,  1.85it/s, objective=-.214]
    179it [01:56,  1.97it/s, objective=-.214]
    179it [01:56,  1.97it/s, objective=-.214]
    180it [01:57,  1.32it/s, objective=-.214]
    180it [01:57,  1.32it/s, objective=-.214]
    181it [01:58,  1.56it/s, objective=-.214]
    181it [01:58,  1.56it/s, objective=-.214]
    182it [01:58,  1.64it/s, objective=-.214]
    182it [01:58,  1.64it/s, objective=-.214]
    183it [01:59,  1.39it/s, objective=-.214]
    183it [01:59,  1.39it/s, objective=-.214]



.. GENERATED FROM PYTHON SOURCE LINES 67-68

Finally, we plot the results from the collected DataFrame. The execution time is used as the x-axis which help-us vizualise the advantages of the parallel search.

.. GENERATED FROM PYTHON SOURCE LINES 68-81

.. code-block:: default

    import matplotlib.pyplot as plt

    plt.figure()

    for strategy, df in results.items():
        plt.scatter(df.timestamp_end, df.objective, label=strategy)
        plt.plot(df.timestamp_end, df.objective.cummax())

    plt.xlabel("Time (sec.)")
    plt.ylabel("Objective")
    plt.grid()
    plt.legend()
    plt.show()



.. image-sg:: /examples/images/sphx_glr_plot_from_serial_to_parallel_hyperparameter_search_001.png
   :alt: plot from serial to parallel hyperparameter search
   :srcset: /examples/images/sphx_glr_plot_from_serial_to_parallel_hyperparameter_search_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 4 minutes  1.790 seconds)


.. _sphx_glr_download_examples_plot_from_serial_to_parallel_hyperparameter_search.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_from_serial_to_parallel_hyperparameter_search.py <plot_from_serial_to_parallel_hyperparameter_search.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_from_serial_to_parallel_hyperparameter_search.ipynb <plot_from_serial_to_parallel_hyperparameter_search.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
